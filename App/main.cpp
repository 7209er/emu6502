#include <stdio.h>
#include "emu6502.h"
#include "bus.h"
#include "assembler.h"

int main(){
    Bus bus;
    bus.cpu.reset();

    bus.write(0xFFFC, 0x4C);  // JMP $2000 
    bus.write(0xFFFD, 0x00);  //
    bus.write(0xFFFE, 0x20);  //

    // The following program loops between rendering two quadrilaterals
    // It loades the coordinates into the specified position by DrawingDevice, accordingly it sets 0x0502 to 0x01 to signal a new vertex.
    // After all new positions have been passed, it sets 0x0502 to 0x02 to command rendering a quadrilateral.
    // Setting flags in  // Loading first pair coordinates                      // Loading second pair                                 // Loading third pair                                  // Loading forth pair                                  // Set new vertices
    //bus.loadProgram("0xA9 0x02 0xA0 0x01 0xA2 0xDB 0x8E 0x00 0x05 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0x60 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0x5F 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0xBF 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8D 0x02 0x05 \
    //    0xA2 0x40 0x8E 0x00 0x05 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0xB0 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0xB0 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0x40 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8D 0x02 0x05 \
    //    0x4C 0x04 0x20"  // Jumps back to load the verticies again
    //);
    // As nothing is written to 0x0401 - 0x0402 the OutputDevice isn't used in this program

    // Loads the same program as above but the Assembly is converted into machine code 
    Assembler assambler("LDA #02 LDY #01 LDX #DB STX $0500 STX $0501 STY $0502 STX $0500 LDX #60 STX $0501 STY $0502 STX $0500 LDX #5F STX $0501 STY $0502 STX $0500 LDX #BF STX $0501 STY $0502 STA $0502 \
                         LDX #40 STX $0500 STX $0501 STY $0502 STX $0500 LDX #B0 STX $0501 STY $0502 STX $0500 STX $0501 STY $0502 STX $0500 LDX #40 STX $0501 STY $0502 STA $0502 \
                         JMP $2000");
    
    bus.loadProgram(assambler.convert());

    while(!bus.shouldTerminate()) // Window will close by pressing ESC
    {
        bus.clock();
    }
    

    return 0;
}