#include <stdio.h>
#include "emu6502.h"
#include "bus.h"

int main(){
    Bus bus;
    bus.cpu.reset();

    bus.write(0xFFFC, 0x4C);  // JMP #2000 
    bus.write(0xFFFD, 0x00);  //
    bus.write(0xFFFE, 0x20);  //

//  This program is inserted with loadProgram as comment
/*
    bus.ram[0x1414 - 0x1000] = 0xA2;    // LDX #21
    bus.ram[0x1415 - 0x1000] = 0x21;    // 
    bus.ram[0x1416 - 0x1000] = 0x8E;    // STX #0400 (triggers output)
    bus.ram[0x1417 - 0x1000] = 0x00;    //
    bus.ram[0x1418 - 0x1000] = 0x04;    //
    bus.ram[0x1419 - 0x1000] = 0xA0;    // LDY #23
    bus.ram[0x141A - 0x1000] = 0x23;    // 
    bus.ram[0x141B - 0x1000] = 0x8C;    // STY #0401 (triggers output)
    bus.ram[0x141C - 0x1000] = 0x01;    //
    bus.ram[0x141D - 0x1000] = 0x04;    //
*/

    //bus.loadProgram("0xA2 21 0x8E 0x00 0x04 0xA0 0x23 0x8C 0x01 0x04");
    
    // The following program loops between rendering two quadrilaterals
    // It loades the coordinates into the specified position by DrawingDevice, accordingly it sets 0x0502 to 0x01 to signal a new vertex.
    // After all new positions have been passed, it sets 0x0502 to 0x02 to command rendering a quadrilateral.
    // Setting flags in  // Loading first pair coordinates                      // Loading second pair                                 // Loading third pair                                  // Loading forth pair                                  // Set new vertices
    bus.loadProgram("0xA9 0x02 0xA0 0x01 0xA2 0xDB 0x8E 0x00 0x05 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0x60 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0x5F 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0xBF 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8D 0x02 0x05 \
        0xA2 0x40 0x8E 0x00 0x05 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0xB0 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0xB0 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8E 0x00 0x05 0xA2 0x40 0x8E 0x01 0x05 0x8C 0x02 0x05 0x8D 0x02 0x05 \
        0x4C 0x04 0x20"  // Jumps back to load the verticies again
    );
    // As nothing is written to 0x0401 - 0x0402 the OutputDevice isn't used

    while(!bus.shouldTerminate()) // Window will close by pressing ESC
    {
        bus.clock();
    }
    

    return 0;
}